            plugins {
                id("awesome.androidapp.plugin")
            }

            dependencies {
                implementation(libs.androidx.core.ktx)
implementation(libs.appcompat)
implementation(libs.material)
implementation(libs.lifecycle.viewmodel.ktx)
implementation(libs.lifecycle.runtime.ktx)
implementation(libs.lifecycle.livedata.ktx)
implementation(libs.lifecycle.common.java8)
implementation(libs.coroutines.android)
implementation(libs.fragment.ktx)
implementation(libs.activity.ktx)
implementation(libs.constraintlayout)
implementation(libs.work.runtime.ktx)
implementation(libs.hilt.work)
implementation(libs.hilt.android)

ksp(libs.hilt.compiler.androidx)
ksp(libs.hilt.compiler)
kspTest(libs.hilt.compiler)
kspAndroidTest(libs.hilt.compiler)
testImplementation(libs.hilt.android.testing)

implementation(platform(libs.compose.bom))
implementation(libs.compose.ui)
implementation(libs.compose.ui.graphics)
implementation(libs.compose.ui.tooling.preview)
implementation(libs.compose.material3)
implementation(libs.compose.runtime)
implementation(libs.compose.runtime.livedata)
implementation(libs.activity.compose)
implementation(libs.lifecycle.viewmodel.compose)
debugImplementation(libs.compose.ui.tooling)
debugImplementation(libs.compose.ui.test.manifest)

testImplementation(libs.junit4)
testImplementation(libs.junit5.vintage)
testImplementation(libs.coroutines.test)
testImplementation(libs.core.testing)
testImplementation(libs.mockk)
testImplementation(libs.truth)
testImplementation(libs.kotlin.test)
testImplementation(libs.androidx.test.core)
testImplementation(libs.work.testing)
testImplementation(libs.robolectric)
testImplementation(libs.androidx.test.junit)
androidTestImplementation(libs.espresso.core)
                implementation(project(":layer_4:module_4_30"))
    implementation(project(":layer_4:module_4_31"))
    implementation(project(":layer_4:module_4_32"))
    implementation(project(":layer_4:module_4_33"))
    implementation(project(":layer_4:module_4_34"))
    implementation(project(":layer_4:module_4_35"))
    implementation(project(":layer_4:module_4_36"))
    implementation(project(":layer_4:module_4_37"))
    implementation(project(":layer_4:module_4_38"))
    implementation(project(":layer_4:module_4_39"))
    implementation(project(":layer_4:module_4_40"))
    implementation(project(":layer_4:module_4_41"))
    implementation(project(":layer_4:module_4_42"))
    implementation(project(":layer_4:module_4_43"))
    implementation(project(":layer_3:module_3_29"))
    implementation(project(":layer_2:module_2_22"))
    implementation(project(":layer_1:module_1_15"))
    implementation(project(":layer_0:module_0_6"))
    implementation(project(":layer_0:module_0_3"))
    implementation(project(":layer_0:module_0_5"))
    implementation(project(":layer_0:module_0_13"))
    implementation(project(":layer_0:module_0_7"))
    implementation(project(":layer_0:module_0_8"))
    implementation(project(":layer_0:module_0_12"))
    implementation(project(":layer_0:module_0_1"))
    implementation(project(":layer_0:module_0_9"))
    implementation(project(":layer_0:module_0_10"))
    implementation(project(":layer_1:module_1_21"))
    implementation(project(":layer_0:module_0_2"))
    implementation(project(":layer_0:module_0_14"))
    implementation(project(":layer_0:module_0_11"))
    implementation(project(":layer_1:module_1_16"))
    implementation(project(":layer_1:module_1_17"))
    implementation(project(":layer_1:module_1_18"))
    implementation(project(":layer_0:module_0_4"))
    implementation(project(":layer_1:module_1_20"))
    implementation(project(":layer_1:module_1_19"))
    implementation(project(":layer_3:module_3_24"))
    implementation(project(":layer_3:module_3_23"))
    implementation(project(":layer_3:module_3_28"))
    implementation(project(":layer_3:module_3_25"))
    implementation(project(":layer_3:module_3_27"))
    implementation(project(":layer_3:module_3_26"))

                


            }